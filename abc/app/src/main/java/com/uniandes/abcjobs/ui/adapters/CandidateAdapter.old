package com.uniandes.abcjobs.ui.adapters

import android.content.Intent
import android.util.Log
import android.view.LayoutInflater
import android.view.ViewGroup
import androidx.recyclerview.widget.RecyclerView
import com.uniandes.abcjobs.databinding.ActivityCreateCandidateBinding
import androidx.databinding.DataBindingUtil
import androidx.annotation.LayoutRes
import androidx.core.net.toUri
import androidx.navigation.findNavController
import com.bumptech.glide.Glide
import com.bumptech.glide.load.engine.DiskCacheStrategy
import com.bumptech.glide.request.RequestOptions
import com.uniandes.abcjobs.R
import com.uniandes.abcjobs.models.Candidate
/*import com.uniandes.abcjobs.ui.CandidateDetailActivity*/


class CandidateAdapter() : RecyclerView.Adapter<CandidateAdapter.CandidateViewHolder>() {


    var candidates: List<Candidate> = listOf()
        set(value) {
            field = value
            notifyDataSetChanged()
        }
    /*
    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): CandidateViewHolder {
        val withDataBinding: Ca = DataBindingUtil.inflate(
            LayoutInflater.from(parent.context),
            CandidateViewHolder.LAYOUT,
            parent,
            false
        )
        return CandidateViewHolder(withDataBinding)
    }

    override fun onBindViewHolder(holder:CandidateViewHolder, position: Int) {
        holder.viewDataBinding.also {
            it.candidate = candidates[position]
        }
        holder.bind(candidates[position])
        holder.viewDataBinding.root.setOnClickListener {
            val candidate = candidates[position]
            Log.d("Enviando Id:", candidate.id.toString())
            val activity = holder.itemView.context
            val i = Intent(activity, CandidateDetailActivity::class.java)
            i.putExtra("id", candidate.id.toString())
            i.putExtra("firstName", candidate.firstName)
            activity.startActivity(i)
        }
    }

    override fun getItemCount(): Int {
        return candidates.size
    }


    class CandidateViewHolder(val viewDataBinding: CandidateItemBinding) :
        RecyclerView.ViewHolder(viewDataBinding.root) {
        companion object {
            @LayoutRes
            val LAYOUT = R.layout
        }

        fun bind(album: Album) {
            Glide.with(itemView)
                .load(album.cover.toUri().buildUpon().scheme("https").build())
                .apply(
                    RequestOptions()
                        .placeholder(R.drawable.loading_animation)
                        .diskCacheStrategy(DiskCacheStrategy.ALL)
                        .error(R.drawable.ic_broken_image)
                )
                .into(viewDataBinding.cover)
        }

    }*/

}